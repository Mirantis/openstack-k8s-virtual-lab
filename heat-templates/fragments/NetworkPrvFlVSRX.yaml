heat_template_version: queens

parameters:
  private_floating_network_cidr:
    type: string
  private_floating_network_ipam_pool_start:
    type: string
  private_floating_network_ipam_pool_end:
    type: string
  private_floating_network_gateway:
    type: string
  accessible_network:
    type: string
  control_network_vsrx_peering_ip:
    type: string

resources:

  network:
    type: OS::Neutron::Net
  subnet:
    type: OS::Neutron::Subnet
    properties:
      network: { get_resource: network }
      enable_dhcp: false
      cidr: { get_param: private_floating_network_cidr }
      gateway_ip: ~
      allocation_pools:
        - start: { get_param: private_floating_network_ipam_pool_start }
          end: { get_param: private_floating_network_ipam_pool_end }

  accessible_server_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: accessible_network }
      port_security_enabled: false
      fixed_ips:
       - ip_address: {get_param: control_network_vsrx_peering_ip }

  private_floating_server_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: network }
      port_security_enabled: false
      fixed_ips:
        - ip_address: { get_param: private_floating_network_gateway}

  vsrx_instance:
    type: OS::Nova::Server
    properties:
      name: { list_join: ['-', [get_param: "OS::stack_name", 'vsrx01']] }
      availability_zone: nova
      image: vsrx-mcp2-external
      flavor: oc_vsrx
      networks:
        - port: { get_resource: accessible_server_port }
        - port: { get_resource: private_floating_server_port }

outputs:
  private_floating_network_id:
    value: { get_resource: network }
  private_floating_subnet_id:
    value: { get_resource: subnet }
